<?php

namespace AppBundle\Repository;

/**
 * LivraisonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LivraisonRepository extends \Doctrine\ORM\EntityRepository
{
    public function findLivraisonsEffectuees()
    {
        return $this->getEntityManager()
            ->createQuery("SELECT l FROM AppBundle:Livraison l WHERE l.dateLivraisonEffective IS NOT NULL ORDER BY l.dateLivraisonEffective DESC")
            ->getResult();
    }

    public function findLivraisonsEnAttente()
    {
        return $this->getEntityManager()
            ->createQuery("SELECT l FROM AppBundle:Livraison l WHERE l.dateLivraisonEffective IS NULL ORDER BY l.dateLivraisonPrevisionnelle DESC")
            ->getResult();
    }

    public function findLivraisonsEffectueesByConcession($concession)
    {
        $query = $this->createQueryBuilder('l')
            ->join('l.vente', 'v')
            ->join('v.cartContent', 'cc')
            ->join('cc.vehiculePhysique', 'vp');

        $query->Where('vp.concession = :concession')
            ->setParameters(array(
                'concession' => $concession,
            ));
        $query->AndWhere('l.dateLivraisonEffective IS NOT NULL');

        return $query->getQuery()->getResult();

    }

    public function findLivraisonsEnAttenteByConcession($concession)
    {
        $query = $this->createQueryBuilder('l')
            ->join('l.vente', 'v')
            ->join('v.cartContent', 'cc')
            ->join('cc.vehiculePhysique', 'vp');

        $query->Where('vp.concession = :concession')
            ->setParameters(array(
                'concession' => $concession,
            ));
        $query->AndWhere('l.dateLivraisonEffective IS NULL');

        return $query->getQuery()->getResult();
    }
}
